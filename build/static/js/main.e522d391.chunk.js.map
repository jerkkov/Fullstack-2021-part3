{"version":3,"sources":["components/Addperson.js","components/Persons.js","components/Filter.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Addperson","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","value","onChange","type","Persons","person","removePerson","name","number","onClick","Filter","handleFindChange","baseUrl","Notification","notification","className","message","App","useState","showAll","setShowAll","setNewName","setNewNumber","persons","setPersons","setNotification","notify","setTimeout","useEffect","axios","get","then","response","data","initialPersons","personToBeRemoved","id","personInvolved","find","p","window","confirm","delete","remove","returnedPerson","filter","catch","error","length","toLowerCase","includes","event","target","preventDefault","newObject","matching","put","map","post","create","addedPerson","concat","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e522d391.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Addperson = ( {addPerson,\r\n                    newName, \r\n                    newNumber,\r\n                    handleNameChange,\r\n                    handleNumberChange\r\n                  } ) => {\r\n\r\n    return (\r\n        <div>\r\n        <form onSubmit={addPerson}>\r\n        <div>\r\n          name: <input  \r\n            value={newName}\r\n            onChange={handleNameChange} /><br/>\r\n          number: <input\r\n            value={newNumber}\r\n            onChange={handleNumberChange} /><br/>\r\n          <button type=\"submit\"> \r\n            add</button>\r\n        </div>\r\n      </form>\r\n      </div>\r\n    )\r\n}\r\nexport default Addperson","import React from 'react'\r\n\r\nconst Persons = ({ person, removePerson }) => {\r\n    //To show all names or filtered result\r\n    const {name, number} = person\r\n    \r\n    return (\r\n           <p>{name} {number} \r\n           <button onClick={removePerson}> delete </button></p> \r\n    )\r\n}\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = ({ handleFindChange}) => {\r\n  return (\r\n    <div>\r\n       filter shown with<input onChange={handleFindChange} />\r\n    </div>\r\n    )\r\n}\r\nexport default Filter","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nexport const getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport const create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport const update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport const remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n    if (notification === null) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <div className={notification.type}> \r\n        {notification.message}\r\n      </div>)\r\n    }\r\n\r\nexport default Notification ","import React, { useState, useEffect } from 'react'\r\nimport Addperson from './components/Addperson'\r\nimport Persons from './components/Persons'\r\nimport Filter from './components/Filter'\r\nimport {getAll, create, update, remove } from './services/persons'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => { \r\n  const [showAll, setShowAll] = useState('')\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [persons, setPersons] = useState([])\r\n  const [notification, setNotification] = useState(null)\r\n  \r\n  //Inputfield management for name\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n  //Inputfield management for number\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n    //Inputfield management for number\r\n  const handleFindChange = (event) => {\r\n    setShowAll(event.target.value)\r\n  }\r\n\r\n  //Notification\r\n  const notify = (message, type='succes') => {\r\n    setNotification({ message, type })\r\n    setTimeout(() => {\r\n      setNotification(null)\r\n    }, 3000);\r\n  }\r\n\r\n  //Fetch persons from database\r\n  useEffect(() => {\r\n     getAll()\r\n    .then(initialPersons => {\r\n    setPersons(initialPersons)\r\n    })\r\n  }, [])\r\n  //Add new person\r\n\r\n  const personManagement = (event) => {\r\n    event.preventDefault() \r\n    //Update person's number if names match\r\n    const matching = persons.find(person => person.name === newName)\r\n    if (matching) {\r\n     if (window.confirm(`${matching.name} is already added to notebook, replace the old number with a new one?`)) {\r\n        update(matching.id, {\r\n          name: matching.name,\r\n          number:newNumber\r\n        }).then(returnedPerson => {\r\n          setPersons(persons.map(person => \r\n            person.id !== matching.id ?\r\n             person : returnedPerson))\r\n          notify(`Changed number of ${matching.name}`)\r\n          setNewName('')\r\n          setNewNumber('')\r\n        }).catch(error => {\r\n          notify(`${error.response.data.error}`, 'error')\r\n        })\r\n      }\r\n    }\r\n    else {\r\n      create({\r\n        name: newName,\r\n        number: newNumber,\r\n     }).then(addedPerson => {\r\n       setPersons(persons.concat(addedPerson))\r\n       notify(`Added ${newName}`)\r\n       setNewName('')\r\n       setNewNumber('')\r\n     }).catch(error => {\r\n       notify(`${error.response.data.error}`, 'error')\r\n     })\r\n    }\r\n  }\r\n  \r\n\r\n   const personToBeRemoved = id => {\r\n    const personInvolved = persons.find(p => p.id === id)\r\n      if (window.confirm(`Delete ${personInvolved.name} ?`)) {\r\n      remove(id)\r\n      .then(returnedPerson => {\r\n        setPersons(persons.filter(p => p.id !== id))\r\n          \r\n        notify(\r\n            `Removed ${personInvolved.name}`,\r\n            'succes'\r\n          )\r\n      })\r\n      .catch(error => {\r\n        notify(\r\n          'This person is not saved to the server', \r\n          'error'\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  const filter = showAll.length < 1\r\n      ? persons\r\n      : persons.filter(person => \r\n        person.name.toLowerCase().includes(showAll.toLowerCase()))\r\n  \r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification notification={notification} />\r\n      <Filter handleFindChange={handleFindChange} />\r\n      \r\n      <h2>Add a new</h2>\r\n      <Addperson persons={persons}  \r\n                  newName={newName}\r\n                  newNumber={newNumber}\r\n                  addPerson={personManagement}\r\n                  handleNameChange={handleNameChange}\r\n                  handleNumberChange={handleNumberChange} \r\n                    \r\n      />\r\n      <h2>Numbers</h2>\r\n      <div>\r\n            {filter.map((person, i) =>\r\n                <Persons \r\n                key={i}\r\n                person={person}\r\n                removePerson={() => personToBeRemoved(person.id)} \r\n                />\r\n            )}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}