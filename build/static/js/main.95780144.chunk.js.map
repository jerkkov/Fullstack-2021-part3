{"version":3,"sources":["components/Addperson.js","components/Persons.js","components/Filter.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Addperson","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","value","onChange","type","Persons","person","removePerson","name","number","onClick","Filter","handleFindChange","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","notification","className","message","App","useState","showAll","setShowAll","setNewName","setNewNumber","persons","setPersons","setNotification","notifyWith","setTimeout","useEffect","personService","initialPersons","filter","length","toLowerCase","includes","event","target","preventDefault","existing","find","window","confirm","returnedPerson","map","catch","error","addedPerson","concat","i","personInvolved","p","personToBeRemoved","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95780144.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Addperson = ( {addPerson,\r\n                    newName, \r\n                    newNumber,\r\n                    handleNameChange,\r\n                    handleNumberChange\r\n                  } ) => {\r\n\r\n    return (\r\n        <div>\r\n        <form onSubmit={addPerson}>\r\n        <div>\r\n          name: <input  \r\n            value={newName}\r\n            onChange={handleNameChange} /><br/>\r\n          number: <input\r\n            value={newNumber}\r\n            onChange={handleNumberChange} /><br/>\r\n          <button type=\"submit\"> \r\n            add</button>\r\n        </div>\r\n      </form>\r\n      </div>\r\n    )\r\n}\r\nexport default Addperson","import React from 'react'\r\n\r\nconst Persons = ({ person, removePerson }) => {\r\n    //To show all names or filtered result\r\n    \r\n    return (\r\n           <p>{person.name} {person.number} \r\n           <button onClick={removePerson}> delete </button></p> \r\n    )\r\n}\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = ({ handleFindChange}) => {\r\n  return (\r\n    <div>\r\n       filter shown with<input onChange={handleFindChange} />\r\n    </div>\r\n    )\r\n}\r\nexport default Filter","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }\r\n","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n    if (notification === null) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <div className={notification.type}> \r\n        {notification.message}\r\n      </div>)\r\n    }\r\n\r\nexport default Notification ","import React, { useState, useEffect } from 'react'\r\nimport Addperson from './components/Addperson'\r\nimport Persons from './components/Persons'\r\nimport Filter from './components/Filter'\r\nimport personService from './services/persons'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => { \r\n  const [showAll, setShowAll] = useState('')\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [persons, setPersons] = useState([])\r\n  const [notification, setNotification] = useState(null)\r\n  \r\n  //Inputfield management for name\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n  //Inputfield management for number\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n    //Inputfield management for number\r\n  const handleFindChange = (event) => {\r\n    setShowAll(event.target.value)\r\n  }\r\n\r\n  //Notification\r\n  const notifyWith = (message, type='succes') => {\r\n    setNotification({ message, type })\r\n    setTimeout(() => {\r\n      setNotification(null)\r\n    }, 3000);\r\n  }\r\n\r\n  //Fetch persons from database\r\n  useEffect(() => {\r\n    personService\r\n    .getAll()\r\n    .then(initialPersons => {\r\n    setPersons(initialPersons)\r\n    })\r\n  }, [])\r\n\r\n  //Add new person\r\n  const addPerson = (event) => {\r\n    event.preventDefault() \r\n    //Change number of the existing person \r\n    const existing = persons.find(person => person.name === newName)\r\n    if (existing) {\r\n     const ok = window.confirm(`${existing.name} is already added to notebook, replace the old number with a new one?`) \r\n      if (ok) {\r\n        personService.update(existing.id, {\r\n          name: existing.name,\r\n          number:newNumber\r\n        }).then(returnedPerson => {\r\n          setPersons(persons.map(person => \r\n            person.id !== existing.id ?\r\n             person : returnedPerson))\r\n          notifyWith(`Changed number of ${existing.name}`)\r\n          setNewName('')\r\n          setNewNumber('')\r\n        }).catch(error => {\r\n          notifyWith(`${error.response.data.error}`, 'error')\r\n        })\r\n      }\r\n     } else {\r\n      personService.create({\r\n        name: newName,\r\n        number: newNumber,\r\n     }).then(addedPerson => {\r\n       setPersons(persons.concat(addedPerson))\r\n       notifyWith(`Added ${newName}`)\r\n       setNewName('')\r\n       setNewNumber('')\r\n     }).catch(error => {\r\n       notifyWith(`${error.response.data.error}`, 'error')\r\n     })\r\n    }\r\n  }\r\n\r\n   const personToBeRemoved = id => {\r\n    const personInvolved = persons.find(p => p.id === id)\r\n      if (window.confirm(`Delete ${personInvolved.name} ?`)) {\r\n      personService\r\n      .remove(id)\r\n      .then(returnedPerson => {\r\n        setPersons(persons.filter(p => p.id !== id))\r\n          \r\n        notifyWith(\r\n            `Removed ${personInvolved.name}`,\r\n            'succes'\r\n          )\r\n      })\r\n      .catch(error => {\r\n        notifyWith(\r\n          'This person is not saved to the server', \r\n          'error'\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  const filter = showAll.length < 1\r\n      ? persons\r\n      : persons.filter(person => \r\n        person.name.toLowerCase().includes(showAll.toLowerCase()))\r\n  \r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification notification={notification} />\r\n      <Filter handleFindChange={handleFindChange} />\r\n      \r\n      <h2>Add a new</h2>\r\n      <Addperson persons={persons}  \r\n                  newName={newName}\r\n                  newNumber={newNumber}\r\n                  addPerson={addPerson}\r\n                  handleNameChange={handleNameChange}\r\n                  handleNumberChange={handleNumberChange} \r\n                    \r\n      />\r\n      <h2>Numbers</h2>\r\n      <div>\r\n            {filter.map((person, i) =>\r\n                <Persons \r\n                key={i}\r\n                person={person}\r\n                removePerson={() => personToBeRemoved(person.id)} \r\n                />\r\n            )}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}